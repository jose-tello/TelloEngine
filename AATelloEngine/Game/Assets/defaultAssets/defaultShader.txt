__VERTEX_SHADER__ 
#version 330 core
layout (location = 0) in vec3 position;
layout (location = 1) in vec2 texCoord;

out vec2 TexCoord;
out vec3 diffuse_color;

uniform vec3 material_color;
uniform mat4 model_matrix;
uniform mat4 view;
uniform mat4 projection;

void main()
{
 gl_Position = projection * view * model_matrix * vec4(position, 1.0f);
 TexCoord = texCoord;
 diffuse_color = material_color;
}


__FRAGMENT_SHADER__
#version 330 core
in vec2 TexCoord;
in vec3 diffuse_color;

out vec4 color;

uniform sampler2D ourTexture;
uniform bool has_texture;

void main()
{
 if (has_texture == true)
  color = normalize(texture(ourTexture, TexCoord) * vec4(diffuse_color, 1.0));

 else
  color = vec4(diffuse_color, 1.0);
}